
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px
);
body{
    overflow-x: hidden !important;
}
.btn-close-off-canvas{
    color: white !important;
    font-size: 2rem;
}
.bg-glass{
            top: 0;
            left: 0;
            width: 100%;
            z-index: 99999;
            background: rgba(116, 116, 116, 0.3);
            backdrop-filter: blur(10px);
            box-shadow: 0 2px 4px rgba(18, 18, 18, 0.329);
}
.bg-glass-off-canvas{
     background: rgba(116, 116, 116, 0.3);
            backdrop-filter: blur(10px);
            box-shadow: 0 2px 4px rgba(18, 18, 18, 0.329);
}
.bg-glass-card{
     background: linear-gradient(103deg, rgba(66, 64, 73, 0.80) 8%, rgba(42, 59, 136, 0.08) 80%,);
            backdrop-filter: blur(10px);
            box-shadow: 0 2px 4px rgba(18, 18, 18, 0.329);
}
.bg-glass-card-regulasi{
     background: linear-gradient(103deg, rgba(66, 64, 73, 0.80) 8%, rgba(42, 59, 136, 0.08) 80%,);
            backdrop-filter: blur(10px);
            box-shadow: 0 2px 4px rgba(18, 18, 18, 0.329);
            width: 100% !important;
}
.bg-glass-card-carousel{
     background: linear-gradient(103deg, rgba(66, 64, 73, 0.80) 8%, rgba(42, 59, 136, 0.08) 80%,);
            backdrop-filter: blur(10px);
            box-shadow: 0 2px 4px rgba(18, 18, 18, 0.329);
            margin-bottom: 1rem * 3;
            border-radius: 10px;

                @media (min-width: map-get($grid-breakpoints, xs)) {
             width: 50vw;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
           width: 60vw;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
            width: 60vw;
    }
    @media (min-width: map-get($grid-breakpoints, lg)) {
            width: 50vw;
            margin-left: 7vw;
    }
    @media (min-width: map-get($grid-breakpoints, xl)) {
             width: 40vw;
            margin-left: 12vw;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
             width: 35vw;
            margin-left: 15vw;
    }
}
.image-container {
    position: absolute;
    width: 100%;
    height: 100vh;
    overflow: hidden;
top: 0;
    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, rgba(62, 74, 159, 0), rgba(62, 74, 159, 0.1),rgba(62, 74, 159, 0.2),rgba(62, 74, 159, 0.7));
    }

    .image {
        width: 100%;
        height: 100%;
        object-fit: fill;
    }
}
.container-beranda-carousel{
    margin-top: 45vh;

}
.container-beranda-berita{
  margin-top: 25vh;
        .line-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-align: justify;
}

          #hat {
  width: 17rem;
  height: 17rem;
  position: absolute;
  right: 50%;
  top: 0;
  transform: translate(50%,-30%);
  z-index: 0;
    object-fit: cover;

}
.card-berita{
    height: 30rem;
    width: 20rem;
}

}
.container-berita{
  margin-top: 15vh;
        .line-clamp {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-align: justify;
}

          #hat {
  width: 17rem;
  height: 17rem;
  position: absolute;
  right: 50%;
  top: 0;
  transform: translate(50%,-30%);
  z-index: 0;
  object-fit: cover;
}
.card-berita{
    height: 30rem;
    width: 20rem;
}

}
.custom-carousel{
    height: 80vh;
    object-fit: cover;
    width: 100%;
    border-radius: 20px;
}
.carousel-indicators [data-bs-target]{
    border-radius: 50%;
    width: 15px;
    height: 15px;
}

.container-beranda-image{
    @media (min-width: map-get($grid-breakpoints, xs)) {
        padding-top: 30vh;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
        padding-top: 35vh;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
        padding-top: 35vh;
    }
    @media (min-width: map-get($grid-breakpoints, lg)) {
        padding-top: 32vh;
    }
    @media (min-width: map-get($grid-breakpoints, xl)) {
        padding-top: 35vh;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
        padding-top: 35vh;
    }
}

.dropdown-menu-size-profile{
background: rgba(206, 206, 206, 0.621);
border-radius: 5px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(8.4px);
-webkit-backdrop-filter: blur(8.4px);
    @media (min-width: map-get($grid-breakpoints, xs)) {
        width: 100vw;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
        width: 30vw;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
        width: 35vw;
    }

    @media (min-width: map-get($grid-breakpoints, lg)) {
        width: 30vw;
    }

    @media (min-width: map-get($grid-breakpoints, xl)) {
        width: 25vw;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
        width: 22vw;
    }
}
.dropdown-menu-size-informasi{
background: rgba(206, 206, 206, 0.621);
border-radius: 5px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(8.4px);
-webkit-backdrop-filter: blur(8.4px);
    @media (min-width: map-get($grid-breakpoints, xs)) {
        width: 100vw;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
        width: 30vw;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
        width: 45vw;
    }

    @media (min-width: map-get($grid-breakpoints, lg)) {
        width: 40vw;
    }

    @media (min-width: map-get($grid-breakpoints, xl)) {
        width: 35vw;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
        width: 25vw;
    }
}

.dropdown-menu-size-regulasi{
background: rgba(206, 206, 206, 0.621);
border-radius: 5px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(8.4px);
-webkit-backdrop-filter: blur(8.4px);
    @media (min-width: map-get($grid-breakpoints, xs)) {
        width: 100vw;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
        width: 30vw;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
        width: 45vw;
    }

    @media (min-width: map-get($grid-breakpoints, lg)) {
        width: 40vw;
    }

    @media (min-width: map-get($grid-breakpoints, xl)) {
        width: 35vw;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
        width: 25vw;
    }
}

.dropdown-menu-size-ppid{
background: rgba(206, 206, 206, 0.621);
border-radius: 5px;
box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
backdrop-filter: blur(8.4px);
-webkit-backdrop-filter: blur(8.4px);
    @media (min-width: map-get($grid-breakpoints, xs)) {
        width: 100vw;
    }
        @media (min-width: map-get($grid-breakpoints, sm)) {
        width: 40vw;
    }
        @media (min-width: map-get($grid-breakpoints, md)) {
        width: 65vw;
    }

    @media (min-width: map-get($grid-breakpoints, lg)) {
        width: 50vw;
    }

    @media (min-width: map-get($grid-breakpoints, xl)) {
        width: 40vw;
    }
    @media (min-width: map-get($grid-breakpoints, xxl)) {
        width: 35vw;
    }
}

.arrow-hover {
  display: inline-block;
  transition: transform 0.25s ease-in-out;

  &:hover {
    transform: translateX(5px);
  }
}
.arrow-hover-down {
  display: inline-block;
  transition: transform 0.25s ease-in-out;

  &:hover {
    transform: translateY(5px);
  }
}



.input-wrapper-pesan {
  position: relative;
  margin-top: 30px;
  margin-inline: auto;
}

.input-pesan,
.textarea-pesan {

  font-size: 20px;
  width: 100%;
  padding: 10px 0;
  padding-right: 10px;
  padding-left: 10px;
  color: white;
  border: none;
  border: 1px solid #ddd;
  transition: border-color 250ms;
  background-color: transparent;
  resize: vertical; /* Allow vertical resizing for textarea */

  &:focus {
    outline: none;
    border-color:  #777;
  }

  &::placeholder {
    color: transparent;
  }
}

.label-pesan {
  position: absolute;
  top: 8px;
  left: 8px;
  color: white;
  pointer-events: none;
  transform-origin: left center;
  transition: transform 250ms;
}

.clear-pesan {
  cursor: pointer;
  appearance: none;
  -webkit-appearance: none;
  position: absolute;
  top: 50%;
  right: -9px;
  transform: translateY(-50%);
  background: none;
  border: none;
  border-radius: 50%;
  height: 30px;
  width: 30px;
  color: white;
  transition: color 250ms;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover,
  &:focus {
    color: #333;
  }
}

.input-pesan:placeholder-shown + .label-pesan,
.textarea-pesan:placeholder-shown + .label-pesan {
  transform: translateY(0) scale(1);
  transition: transform 250ms;
}

.input-pesan:focus + .label-pesan,
.input-pesan:not(:placeholder-shown) + .label-pesan,
.textarea-pesan:focus + .label,
.textarea-pesan:not(:placeholder-shown) + .label-pesan {
  transform: translateY(-40%) scale(0.8);
}
.link-tautan {
  position: relative;
  color: white;
  text-decoration: none;
  font-weight: lighter;

  &:hover {
    &:before {
      content: "";
      position: absolute;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 2px;
      background-color: white;
      animation: linkHover 1s forwards;
    }
  }

  @keyframes linkHover {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
}



.breadcrumb-nonactive{
    color: #B0B0B0;
}
.justified-text{
    text-align: justify;
}
.profile-image{
    position: absolute;
    right: 0;
    z-index: 0;
}
   .gradient-overlay {
    position: relative;
    overflow: hidden;

    img {
        position: relative;
        display: block;
        width: 100%;
        z-index: 0;
    }

    &::before {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        height: 100%;
        z-index: 1;
    }

    .text-content {
        position: relative;
        z-index: 2;
    }

    @media (min-width: map-get($grid-breakpoints, lg)) {
        &::before {
            background: linear-gradient(-90deg, rgba(22, 21, 29, 0), rgba(22, 21, 29, 0.3), rgb(22, 21, 29), rgba(22, 21, 29, 1));
        }
    }


}

$table-border: 1.5px solid #3d3d3d;
// $table-border: 1px solid black;
table.rounded-corners {
  text-align: start;

  /* Change these properties */
  --border: #{$table-border};
  border-radius: 10px;
  color: #fcfcfc;

  /* Don't change these properties */
  border-spacing: 0;
  border-collapse: separate;
  border: var(--border);
  overflow: hidden;
  background-color: #222222;

  /* Apply a border to the right of all but the last column */
  th:not(:last-child),
  td:not(:last-child) {
    border-right: var(--border);
    border-bottom: var(--border);
  }

  /* Apply a border to the bottom of all rows except the last row and to the thead */
  > thead > tr:not(:last-child) > th,
  > thead > tr:not(:last-child) > td,
  > tbody > tr:not(:last-child) > th,
  > tbody > tr:not(:last-child) > td,
  > tfoot > tr:not(:last-child) > th,
  > tfoot > tr:not(:last-child) > td,
  > tr:not(:last-child) > th {
    border-bottom: var(--border);
  }

  /* Apply a border to the tbody and tfoot, excluding the last child */
  > tbody:not(:last-child),
  > tfoot:not(:last-child) {
    border-bottom: var(--border);
  }

  /* Remove border from the last row */
  > tbody > tr:last-child > th,
  > tbody > tr:last-child > td {
    border-bottom: none;
  }

  /* Add border bottom to the last column in the thead */
  > thead > tr > th:last-child {
    border-bottom: var(--border);
  }
}
.map-container {
    position: relative;
    overflow: hidden;
    padding-top: 75%; // Adjust this value to control the aspect ratio of the map

    iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 95%;
        height: 100%;
    }
}
.special-footer{
    overflow-x: hidden !important;
}
// Add additional styles as needed for your other elements
#searchbar-header::placeholder {
    color: white;

}
.regulasi-link{
    color: white;
    &:hover{
        color: #acacac;
    }
}




.input-wrapper {
  position: relative;
  margin-top: 30px;
  margin-inline: auto;
}

.input,
.textarea {
  font-size: 20px;
  width: 100%;
  padding: 8px 0;
  padding-right: 30px;
  color: white;
  border: none;
  border-bottom: 1px solid #ddd;
  transition: border-color 250ms;
  background-color: transparent;
  resize: vertical; /* Allow vertical resizing for textarea */

  &:focus {
    outline: none;
    border-bottom-color: #777;
  }

  &::placeholder {
    color: transparent;
  }
}

.label {
  position: absolute;
  top: 8px;
  left: 0;
  color: white;
  pointer-events: none;
  transform-origin: left center;
  transition: transform 250ms;
}

.clear {
  cursor: pointer;
  appearance: none;
  -webkit-appearance: none;
  position: absolute;
  top: 50%;
  right: -9px;
  transform: translateY(-50%);
  background: none;
  border: none;
  border-radius: 50%;
  height: 30px;
  width: 30px;
  color: white;
  transition: color 250ms;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover,
  &:focus {
    color: #333;
  }
}

.input:placeholder-shown + .label,
.textarea:placeholder-shown + .label {
  transform: translateY(0) scale(1);
  transition: transform 250ms;
}

.input:focus + .label,
.input:not(:placeholder-shown) + .label,
.textarea:focus + .label,
.textarea:not(:placeholder-shown) + .label {
  transform: translateY(-100%) scale(0.75);
}
